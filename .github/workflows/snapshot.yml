name: snapshot
run-name: Snapshot run ${{ github.run_number }}

on:
  workflow_dispatch:

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest

    permissions:
      contents: read
      checks: write

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          # we need the full history to validate license headers
          fetch-depth: 0

      - uses: ./.github/actions/setup-java

      - name: Validate license headers
        run: mvn -U -B license:check -P sxda.build.license-validation

  publish-maven:
    runs-on: ubuntu-latest
    needs: validate

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/setup-java
        with:
          server-id: 'github'
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - uses: ./.github/actions/setup-node-pnpm

      - name: Publish maven modules to GitHub Packages
        run: mvn -B deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PRIVATE_KEY_PASSPHRASE }}
          MAVEN_USERNAME: 'nisrael'
          MAVEN_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

  publish-npm:
    runs-on: ubuntu-latest
    needs: validate

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v5

      - uses: ./.github/actions/setup-node-pnpm

      - name: Update the npm module snapshot version for all projects in the workspace
        run: npm run version:snapshot
        # run from the ace directory, but this updates the version in all workspace projects
        working-directory: ./ace

      - name: Build ace npm module
        run: npm run build:all
        working-directory: ./ace

      - name: Prepare ace for publishing
        run: npm run prepublishOnly
        working-directory: ./ace

      - name: Publish ace node packages to npmjs.com
        run: npm publish --access public --tag snapshot
        working-directory: ./ace
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build codemirror npm module
        run: npm run build:all
        working-directory: ./codemirror

      - name: Prepare codemirror for publishing
        run: npm run prepublishOnly
        working-directory: ./codemirror

      - name: Publish codemirror node packages to npmjs.com
        run: npm publish --access public --tag snapshot
        working-directory: ./codemirror
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build monaco npm module
        run: npm run build:all
        working-directory: ./monaco

      - name: Prepare monaco for publishing
        run: npm run prepublishOnly
        working-directory: ./monaco

      - name: Publish monaco node packages to npmjs.com
        run: npm publish --access public --tag snapshot
        working-directory: ./monaco
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
